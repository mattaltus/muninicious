<div class="modal fade" id="graph_zoom">
  <div class="modal-dialog modal-lg" style="width: 95%">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title text-capitalize" id="graph_zoom_title">Graph - None</h4>
      </div>
      <div class="modal-body">
        <div id="graph" style="width: 100%; height: 500px"></div>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<style>
.glyphicon-refresh-animate {
    -animation: spin .7s infinite linear;
    -webkit-animation: spin2 .7s infinite linear;
}

@-webkit-keyframes spin2 {
    from { -webkit-transform: rotate(0deg);}
    to { -webkit-transform: rotate(360deg);}
}

@keyframes spin {
    from { transform: scale(1) rotate(0deg);}
    to { transform: scale(1) rotate(360deg);}
}
</style>

<script>


$('#graph_zoom').on('show.bs.modal', function (event) {
  var button = $(event.relatedTarget);
  var title  = button.data('title');

  var modal = $(this);
  var graph = modal.find('#graph');

  modal.find('.modal-title').text(title);
  graph.html('<div class="text-center"><span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span> Loading...</div>');
});

$('#graph_zoom').on('shown.bs.modal', function (event) {
  var button = $(event.relatedTarget);
  var url    = button.data('dataurl');
  var title  = button.data('title');

  var modal = $(this);
  var graph = modal.find('#graph');
  modal.find('.modal-title').text(title);

  $.getJSON(url, function(data) {
    var y_axis   = data.vlabel;
    var colours  = new Array();
    var gdata    = new Array();
    var labels   = ['ts'];
    var soptions = new Array();
    $.each( data.data, function( i, series ) {
      colours.push('#'+series.colour);
      labels.push(series.name);
      soptions[series.name] = new Array();
      soptions[series.name].fillGraph    = series.area;
      soptions[series.name].stackedGraph = series.stack;
      $.each( series.data, function(i, row) {
        if (typeof gdata[i] === 'undefined') {
          gdata[i] = new Array();
          gdata[i].push(new Date(row[0] * 1000));
          gdata[i].push(row[1]);
        }
        else {
          gdata[i].push(row[1]);
        }
      });
    });

    g = new Dygraph(document.getElementById("graph"),
      gdata,
      {
        showRangeSelector: true,
        rangeSelectorHeight: 30,
        colors: colours,
        labels: labels,
        ylabel: y_axis,
        labelsKMB: true,
        rollPeriod: 1,
        customBars: true,
        stepPlot: false,
        series: soptions,
      }
    );
  });
});

</script>